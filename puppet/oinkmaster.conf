# $Id: oinkmaster.conf,v 1.132 2006/02/02 12:05:08 andreas_o Exp $ #

# This file is pretty big by default, but don't worry. 
# The only things required are "path" and "update_files". You must also 
# set "url" to point to the correct rules archive for your version of 
# Snort, unless you prefer to specify this on the command line.
# The rest in here is just a few recommended defaults, and examples
# how to use all the other optional features and give some ideas how they 
# could be used.

# Remember not to let untrusted users edit Oinkmaster configuration
# files, as things like the PATH to use during execution is defined
# in here.



# Use "url = <url>" to specify the location of the rules archive to 
# download. The url must begin with http://, https://, ftp://, file:// 
# or scp:// and end with .tar.gz or .tgz, and the file must be a 
# gzipped tarball what contains a directory named "rules".
# You can also point to a local directory with dir://<directory>.
# Multiple "url = <url>" lines can be specified to grab multiple rules
# archives from different locations.
#
# Note: if URL is specified on the command line, it overrides all 
#       possible URLs specified in the configuration file(s).
#
# The location of the official Snort rules you should use depends
# on which Snort version you run. Basically, you should go to
# http://www.snort.org/rules/ and follow the instructions
# there to pick the right URL for your version of Snort
# (and remember to update the URL when upgrading Snort in the
# future). You can of course also specify locations to third party 
# rules.
#
# As of March 2005, you must register on the Snort site to get access 
# to the official Snort rules. This will get you an "oinkcode".
# You then specify the URL as
# http://www.snort.org/pub-bin/oinkmaster.cgi/<oinkcode>/<filename>
# For example, if your code is 5a081649c06a277e1022e1284b and
# you use Snort 2.4, the url to use would be (without the wrap):
# http://www.snort.org/pub-bin/oinkmaster.cgi/
# 5a081649c06a277e1022e1284bdc8fabda70e2a4/snortrules-snapshot-2.4.tar.gz
# See the Oinkmaster FAQ Q1 and http://www.snort.org/rules/ for
# more information.

url = http://www.snort.org/pub-bin/oinkmaster.cgi/EnterOINKcodeHere/snortrules-snapshot-2931.tar.gz

# URL examples follows. Replace <oinkcode> with the code you get on the 
# Snort site in your registered user profile.

# Example for Snort 2.4
# url = http://www.snort.org/pub-bin/oinkmaster.cgi/<oinkcode>/snortrules-snapshot-2.4.tar.gz

# Example for Snort-current ("current" means cvs snapshots).
# url = http://www.snort.org/pub-bin/oinkmaster.cgi/<oinkcode>/snortrules-snapshot-CURRENT.tar.gz

# Example for Community rules
# url = http://www.snort.org/pub-bin/downloads.cgi/Download/comm_rules/Community-Rules.tar.gz

# Example for rules from the Bleeding Snort project
# url = http://www.bleedingsnort.com/bleeding.rules.tar.gz

# If you prefer to download the rules archive from outside Oinkmaster,
# you can then point to the file on your local filesystem by using
# file://<filename>, for example:
# url = file:///tmp/snortrules.tar.gz

# In rare cases you may want to grab the rules directly from a
# local directory (don't confuse this with the output directory).
# url = dir:///etc/snort/src/rules

# Example to use scp to copy the rules archive from another host.
# Only OpenSSH is tested. See the FAQ for more information.
# url = scp://user@somehost.example.com:/somedir/snortrules.tar.gz

# If you use -u scp://... and need to specify a private ssh key (passed 
# as -i <key> to the scp command) you can specify it here or add an 
# entry in ~/.ssh/config for the Oinkmaster user as described in the 
# OpenSSH manual. 
# scp_key = /home/oinkmaster/oinkmaster_privkey


# The PATH to use during execution. If you prefer to use external 
# binaries (i.e. use_external_bins=1, see below), tar and gzip must be 
# found, and also wget if downloading via ftp, http or https. All with 
# optional .exe suffix. If you're on Cygwin, make sure that the path 
# contains the Cygwin binaries and not the native Win32 binaries or 
# you will get problems.
# Assume UNIX style by default:
path = /bin:/usr/bin:/usr/local/bin

# Example if running native Win32 or standalone Cygwin:
# path = c:\oinkmaster;c:\oinkmaster\bin

# Example if running standalone Cygwin and you prefer Cygwin style path:
# path = /cygdrive/c/oinkmaster:/cygdrive/c/oinkmaster/bin


# We normally use external binaries (wget, tar and gzip) since they're 
# already available on most systems and do a good job. If you have the 
# Perl modules Archive::Tar, IO::Zlib and LWP::UserAgent, you can use
# those instead if you like. You can set use_external_bins below to 
# choose which method you prefer. It's set to 0 by default on Win32 
# (i.e. use Perl modules), and 1 on other systems (i.e. use external 
# binaries). The reason for that is that the required Perl modules
# are included on Windows/ActivePerl 5.8.1+, so it's easier to use 
# those than to install the ported Unix tools. (Note that if you're 
# using scp to download the archive, external scp  binary is still 
# used.) 
# use_external_bins = 0


# Temporary directory to use. This directory must exist when starting and
# Oinkmaster will then create a temporary sub directory in here.
# Keep it as a #comment if you want to use the default.
# The default will be checked for in the environment variables TMP,
# TMPDIR or TEMPDIR, or otherwise use "/tmp" if none of them was set.

# Example for UNIX.
# tmpdir = /home/oinkmaster/tmp/

# Example if running native Win32 or Cygwin.
# tmpdir = c:\tmp

# Example if running Cygwin and you prefer Cygwin style path.
# tmpdir = /cygdrive/c/tmp


# The umask to use during execution if you want it to be something
# else than the current value when starting Oinkmaster.
# This will affect the mode bits when writing new files.
# Keep it commented out to keep your system's current umask.
# umask = 0027


# Files in the archive(s) matching this regular expression will be 
# checked for changes, and then updated or added if needed.
# All other files will be ignored. You can then choose to skip
# individual files by specifying the "skipfile" keyword below.
# Normally you shouldn't need to change this one.
update_files = \.rules$|\.config$|\.conf$|\.txt$|\.map$


# Regexp of keywords that starts a Snort rule.
# May be useful if you create your own ruletypes and want those
# lines to be regarded as rules as well.
# rule_actions = alert|drop|log|pass|reject|sdrop|activate|dynamic


# If the number of rules files in the downloaded archive matching the
# 'update_files' regexp is below min_files, or if the number
# of rules is below min_rules, the rules are regarded as broken
# and the update is aborted with an error message.
# Both are set to 1 by default (i.e. the archive is only regarded as
# broken if it's totally empty).
# If you download from multiple URLs, the count is the total number
# of files/rules across all archives.
# min_files = 1
# min_rules = 1


# By default, a basic sanity check is performed on most paths/filenames 
# to see if they contain illegal characters that may screw things up. 
# If this check is too strict for your system (e.g. you get bogus 
# "illegal characters in filename" errors because of your local language 
# etc) and you're sure you want to disable the checks completely,
# set use_path_checks to 0.
# use_path_checks = 1


# If you want Oinkmaster to send a User-Agent HTTP header string
# other than the default one for wget/LWP, set this variable.
# user_agent = Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)


# You can include other files anywhere in here by using
# "include <file>". <file> will be parsed just like a regular 
# oinkmaster.conf as soon as the include statement is seen, and then 
# return and continue parsing the rest of the original file. If an 
# option is redefined, it will override the previous value. You can use 
# as many "include" statements as you wish, and also include even more 
# files from included files. Example to load stuff from "/etc/foo.conf".
# include /etc/foo.conf



#######################################################################
# Files to totally skip (i.e. never update or check for changes)      #
#                                                                     #
# Syntax: skipfile filename                                           #
# or:     skipfile filename1, filename2, filename3, ...               #
#######################################################################

# Ignore local.rules from the rules archive by default since we might 
# have put some local rules in our own local.rules and we don't want it 
# to get overwritten by the empty one from the archive after each 
# update.
skipfile local.rules

# The file deleted.rules contains rules that have been deleted from 
# other files, so there is usually no point in updating it.
skipfile deleted.rules

# Also skip snort.conf by default since we don't want to overwrite our 
# own snort.conf if we have it in the same directory as the rules. If 
# you have your own production copy of snort.conf in another directory, 
# it may be really nice to check for changes in this file though, 
# especially since variables are sometimes added or modified and 
# new/old files are included/excluded.
skipfile snort.conf

# You may want to consider ignoring threshold.conf for the same reasons 
# as for snort.conf, i.e. if you customize it locally and don't want it 
# to become overwritten by the default one. It may be better to put 
# local thresholding/suppressing in some local file and still update 
# and use the official one though, in case important stuff is added to 
# it some day. We do update it by default, but it's your call.
skipfile threshold.conf

# If you update from multiple URLs at the same time you may need to 
# ignore the sid-msg.map (and generate it yourself if you need one) as 
# it's usually included in each rules tarball. See the FAQ for more info.
# skipfile sid-msg.map



##########################################################################
# SIDs to modify after each update (only for the skilled/stupid/brave).  #
# Don't use it unless you have to. There is nothing that stops you from  #
# modifying rules in such ways that they become invalid or generally     #
# break things. You have been warned.                                    #
# If you just want to disable SIDs, please skip this section and have a  #
# look at the "disablesid" keyword below.                                #
#                                                                        #
# You may specify multiple modifysid directives for the same SID (they   #
# will be processed in order of appearance), and you may also specify a  #
# list of SIDs on which the substitution should be applied.              #
# If the argument is in the form something.something it's regarded       #
# as a filename and the substitution will apply on all rules in that     #
# file. The wildcard ("*") can be used to apply the substitution on all  #
# rules regardless of the SID or file. Please avoid using #comments      #
# at the end of modifysid lines, they may confuse the parser in some     #
# situations.                                                            #
#                                                                        #
# Syntax:                                                                #
#   modifysid SID "replacethis" | "withthis"                             #    
# or:                                                                    #
#   modifysid SID1, SID2, SID3, ... "replacethis" | "withthis"           #
# or:                                                                    #
#   modifysid file "replacethis" | "withthis"                            #    
# or:                                                                    #
#   modifysid * "replacethis" | "withthis"                               #
#                                                                        #
# The strings within the quotes will basically be passed to a            #
# s/replacethis/withthis/ statement in Perl, so they must be valid       #
# regular expressions. The strings are case-insensitive and only the     #
# first occurrence will be replaced. If there are multiple occurrences   #
# you want to replace, simply repeat the same modifysid line.            #
# As the strings are regular expressions, you MUST escape special        #
# characters like $ \ / ( ) | by prepending a "\" to them.               #
#                                                                        #
# If you specify a modifysid statement for a multi-line rule, Oinkmaster #
# will first translate the rule into a single-line version and then      #
# perform the substitution, so you don't have to care about the trailing #
# backslashes and newlines.                                              #
#                                                                        #
# If you use backreference variables in the substitution expression,     #
# it's strongly recommended to specify them as ${1} instead of $1 and so #
# on, to avoid parsing confusion with unexpected results in some         #
# situations. Note that modifysid statements will process both active    #
# and inactive (disabled) rules.                                         #
#                                                                        #
# You may want to check out README.templates and template-examples.conf  #
# to find how you can simplify the modifysid usage by using templates.   #
##########################################################################

# Example to enable a rule (in this case SID 1325) that is disabled by
# default, by simply replacing leading "#alert" with "alert".
# (You should really use 'enablesid' for this though.)
# Oinkmaster removes whitespaces next to the leading "#" so you don't
# have to worry about that, but be careful about possible whitespace in
# other places when writing the regexps.
# modifysid 1325 "^#alert" | "alert"

# You could also do this to enable it no matter what type of rule it is
# (alert, log, pass, etc).
# modifysid 1325 "^#" | ""

# Example to add "tag" stuff to SID 1325.
# modifysid 1325 "sid:1325;" | "sid:1325; tag: host, src, 300, seconds;"

# Example to make SID 1378 a 'drop' rule (valid if you're running 
# Snort_inline).
# modifysid 1378 "^alert" | "drop"

# Example to replace first occurrence of $EXTERNAL_NET with $HOME_NET 
# in SID 302.
# modifysid 302 "\$EXTERNAL_NET" | "\$HOME_NET"

# You can also specify that a substitution should apply on multiple SIDs.
# modifysid 302,429,1821 "\$EXTERNAL_NET" | "\$HOME_NET"

# You can take advantage of the fact that it's regular expressions and
# do more complex stuff. This example (for Snort_inline) adds a 'replace'
# statement to SID 1324 that replaces "/bin/sh" with "/foo/sh".
# modifysid 1324 "(content\s*:\s*"\/bin\/sh"\s*;)" | \
#                "${1} replace:"\/foo\/sh";"

# If you for some reason would like to add a comment inside the actual 
# rules file, like the reason why you disabled this rule, you can do 
# like this (you would normally add such comments in oinkmaster.conf 
# though).
# modifysid 1324 "(.+)" | "# 20020101: disabled this rule just for fun:\n#${1}"

# Here is an example that is actually useful. Let's say you don't care 
# about incoming welchia pings (detected by SID 483 at the time of 
# writing) but you want to know when infected hosts on your network 
# scans hosts on the outside. (Remember that watching for outgoing 
# malicious packets is often just as important as watching for incoming 
# ones, especially in this case.) The rule currently looks like
# "alert icmp $EXTERNAL_NET any -> $HOME_NET any ..."
# but we want to switch that so it becomes
# "alert icmp $HOME_NET any -> $EXTERNAL_NET any ...".
# Here is how it could be done.
# modifysid 483 \
# "(.+) \$EXTERNAL_NET (.+) \$HOME_NET (.+)" | \
# "${1} \$HOME_NET ${2} \$EXTERNAL_NET ${3}"

# The wildcard (modifysid * ...) can be used to do all kinds of 
# interesting things. The substitution expression will be applied on all 
# matching rules. First, a silly example to replace "foo" with "bar" in 
# all rules (that have the string "foo" in them, that is.) 
# modifysid * "foo" | "bar"

# If you for some reason don't want to use the stream preprocessor to 
# match established streams, you may want to replace the 'flow' 
# statement with 'flags:A+;' in all those rules.
# modifysid * "flow:[a-z,_ ]+;" | "flags:A+;"

# Example to convert all rules of classtype attempted-admin to 'drop' 
# rules (for Snort_inline only, obviously).
# modifysid * "^alert (.*classtype\s*:\s*attempted-admin)" | "drop ${1}"

# This one will append some text to the 'msg' string for all rules that 
# have the 'tag' keyword in them.
# modifysid * "(.*msg:\s*".+?)"(\s*;.+;\s*tag:.*)" | \
#             "${1}, going to tag this baby"${2}"

# There may be times when you want to replace multiple occurrences of a 
# certain keyword/string in a rule and not just the first one. To 
# replace the first two occurrences of "foo" with "bar" in SID 100, 
# simply repeat the modifysid statement:
# modifysid 100 "foo" | "bar"
# modifysid 100 "foo" | "bar"
 
# Or you can even specify a SID list but repeat the same SID as many 
# times as required, like:
# modifysid 100,100,100 "foo" | "bar"

# Enable all rules in the file exploit.rules.
# modifysid exploit.rules "^#" | ""

# Enable all rules in exploit.rules, icmp-info.rules and also SID 1171.
# modifysid exploit.rules, snmp.rules, 1171 "^#" | ""



########################################################################
# SIDs that we don't want to update.                                   #
# If you for some reason don't want a specific rule to be updated      #
# (e.g. you made local modifications to it and you never want to       #
# update it and don't care about changes in the official version), you #
# can specify a "localsid" statement for it. This means that the old   #
# version of the rule (i.e. the one in the rules file on your          #
# harddrive) is always kept, regardless if the official version has    #
# been updated. Please do not use this feature unless in special       #
# cases as it's easy to end up with many signatures that aren't        #
# maintained anymore. See the FAQ for details about this and hints     #
# about better solutions regarding customization of rules.             #
#                                                                      #
# Syntax:  localsid SID                                                #
# or:      localsid SID1, SID2, SID3, ...                              #
########################################################################

# Example to never update SID 1325.
# localsid 1325



########################################################################
# SIDs to enable after each update.                                    #
# Will simply remove all the leading '#' for a specified SID (if it's  #
# a multi-line rule, the leading '#' for all lines are removed.)       #
# These will be processed after all the modifysid and disablesid       #
# statements. Using 'enablesid' on a rule that is not disabled is a    #
# NOOP.                                                                #
#                                                                      #
# Syntax:  enablesid SID                                               #
# or:      enablesid SID1, SID2, SID3, ...                             #
########################################################################

# Example to enable SID 1325.
# enablesid 1325
enablesid 10996
enablesid 11263
enablesid 1133
enablesid 12591
enablesid 13617
enablesid 13618
enablesid 13656
enablesid 13929
enablesid 13990
enablesid 15434
enablesid 1545
enablesid 15584
enablesid 15874
enablesid 15977
enablesid 16021
enablesid 16078
enablesid 16392
enablesid 16555
enablesid 16560
enablesid 16604
enablesid 16674
enablesid 16712
enablesid 16713
enablesid 17137
enablesid 17140
enablesid 17157
enablesid 17158
enablesid 17159
enablesid 17254
enablesid 17295
enablesid 17302
enablesid 17354
enablesid 17533
enablesid 17609
enablesid 17628
enablesid 17727
enablesid 18179
enablesid 18311
enablesid 1838
enablesid 1854
enablesid 1855
enablesid 18559
enablesid 1856
enablesid 18560
enablesid 18579
enablesid 18611
enablesid 18612
enablesid 18613
enablesid 18713
enablesid 18714
enablesid 18745
enablesid 18759
enablesid 18760
enablesid 18766
enablesid 18792
enablesid 18793
enablesid 18794
enablesid 18795
enablesid 18797
enablesid 18802
enablesid 18905
enablesid 18906
enablesid 18907
enablesid 18908
enablesid 18909
enablesid 18910
enablesid 18911
enablesid 18912
enablesid 18913
enablesid 18914
enablesid 18915
enablesid 18916
enablesid 18917
enablesid 18918
enablesid 18919
enablesid 18920
enablesid 18921
enablesid 18922
enablesid 18923
enablesid 18924
enablesid 18925
enablesid 18931
enablesid 18997
enablesid 19107
enablesid 19137
enablesid 19138
enablesid 19139
enablesid 19140
enablesid 19155
enablesid 19157
enablesid 1918
enablesid 19201
enablesid 19202
enablesid 19297
enablesid 19298
enablesid 19318
enablesid 19319
enablesid 19438
enablesid 19439
enablesid 19440
enablesid 19441
enablesid 19645
enablesid 19779
enablesid 19825
enablesid 19826
enablesid 20045
enablesid 20046
enablesid 20047
enablesid 20177
enablesid 20179
enablesid 20180
enablesid 20240
enablesid 20241
enablesid 20294
enablesid 20295
enablesid 20436
enablesid 20437
enablesid 20438
enablesid 20439
enablesid 20529
enablesid 20824
enablesid 21092
enablesid 21234
enablesid 21235
enablesid 21236
enablesid 21260
enablesid 21297
enablesid 21298
enablesid 21345
enablesid 21377
enablesid 21385
enablesid 21389
enablesid 21513
enablesid 21777
enablesid 21778
enablesid 21779
enablesid 21780
enablesid 21781
enablesid 21782
enablesid 21783
enablesid 21784
enablesid 21785
enablesid 21786
enablesid 21787
enablesid 21788
enablesid 21789
enablesid 221
enablesid 222
enablesid 223
enablesid 224
enablesid 225
enablesid 226
enablesid 227
enablesid 228
enablesid 229
enablesid 230
enablesid 23213
enablesid 23281
enablesid 23282
enablesid 2329
enablesid 23354
enablesid 23466
enablesid 236
enablesid 238
enablesid 248
enablesid 250
enablesid 251
enablesid 2520
enablesid 2585
enablesid 2656
enablesid 2657
enablesid 2658
enablesid 2659
enablesid 2661
enablesid 274
enablesid 3059
enablesid 619
enablesid 622
enablesid 626
enablesid 630
enablesid 637
enablesid 7021
enablesid 8730


########################################################################
# SIDs to comment out, i.e. disable, after each update by placing a    #
# '#' in front of the rule (if it's a multi-line rule, it will be put  #
# in front of all lines).                                              #
#                                                                      #
# Syntax:  disablesid SID                                              #
# or:      disablesid SID1, SID2, SID3, ...                            #
########################################################################

# You can specify one SID per line.
# disablesid 1
# disablesid 2
# disablesid 3

# And also as comma-separated lists.
# disablesid 4,5,6

# It's a good idea to also add comment about why you disable the sid:
# disablesid 1324    # 20020101: disabled this SID just because I can
disablesid 17429
disablesid 10078
disablesid 10079
disablesid 10080
disablesid 10081
disablesid 10082
disablesid 10083
disablesid 10187
disablesid 10998
disablesid 12027
disablesid 12069
disablesid 12078
disablesid 12667
disablesid 13161
disablesid 13221
disablesid 13222
disablesid 13291
disablesid 13292
disablesid 13356
disablesid 13363
disablesid 13365
disablesid 13519
disablesid 13520
disablesid 13521
disablesid 13522
disablesid 13631
disablesid 13846
disablesid 13902
disablesid 13916
disablesid 13928
disablesid 14039
disablesid 14040
disablesid 14041
disablesid 14230
disablesid 14615
disablesid 14741
disablesid 14769
disablesid 14991
disablesid 15145
disablesid 15146
disablesid 15164
disablesid 15383
disablesid 15431
disablesid 15457
disablesid 15458
disablesid 15459
disablesid 15478
disablesid 15485
disablesid 15514
disablesid 15523
disablesid 15526
disablesid 15527
disablesid 15555
disablesid 15573
disablesid 15678
disablesid 15680
disablesid 15699
disablesid 15722
disablesid 15726
disablesid 15729
disablesid 15732
disablesid 15733
disablesid 15849
disablesid 15882
disablesid 15910
disablesid 15939
disablesid 15940
disablesid 15944
disablesid 15993
disablesid 15995
disablesid 15997
disablesid 15999
disablesid 16017
disablesid 16034
disablesid 16046
disablesid 16071
disablesid 16073
disablesid 16149
disablesid 16152
disablesid 16184
disablesid 16185
disablesid 16187
disablesid 16196
disablesid 16213
disablesid 16284
disablesid 16287
disablesid 16327
disablesid 16341
disablesid 16347
disablesid 16349
disablesid 16352
disablesid 16362
disablesid 16364
disablesid 16369
disablesid 16376
disablesid 16377
disablesid 16384
disablesid 16445
disablesid 16454
disablesid 16486
disablesid 16487
disablesid 16488
disablesid 16537
disablesid 16541
disablesid 16578
disablesid 16592
disablesid 16598
disablesid 16605
disablesid 16637
disablesid 16661
disablesid 16667
disablesid 16668
disablesid 16685
disablesid 16731
disablesid 16738
disablesid 16740
disablesid 16741
disablesid 16771
disablesid 16776
disablesid 16785
disablesid 16789
disablesid 16790
disablesid 17044
disablesid 17055
disablesid 17060
disablesid 17086
disablesid 17091
disablesid 17098
disablesid 17117
disablesid 17128
disablesid 17136
disablesid 17139
disablesid 17141
disablesid 17142
disablesid 17156
disablesid 17190
disablesid 17191
disablesid 17192
disablesid 17193
disablesid 17194
disablesid 17196
disablesid 17197
disablesid 17198
disablesid 17207
disablesid 17225
disablesid 17228
disablesid 17234
disablesid 17235
disablesid 17249
disablesid 17257
disablesid 17263
disablesid 17305
disablesid 17306
disablesid 17373
disablesid 17374
disablesid 17381
disablesid 17382
disablesid 17390
disablesid 17397
disablesid 17401
disablesid 17402
disablesid 17425
disablesid 17431
disablesid 17444
disablesid 17445
disablesid 17469
disablesid 17470
disablesid 17519
disablesid 17520
disablesid 17525
disablesid 17530
disablesid 17531
disablesid 17544
disablesid 17549
disablesid 17555
disablesid 17556
disablesid 17558
disablesid 17561
disablesid 17566
disablesid 17570
disablesid 17606
disablesid 17607
disablesid 17641
disablesid 17644
disablesid 17650
disablesid 17654
disablesid 17658
disablesid 17661
disablesid 17669
disablesid 17685
disablesid 17686
disablesid 17687
disablesid 17701
disablesid 17719
disablesid 17721
disablesid 17729
disablesid 17735
disablesid 17747
disablesid 17752
disablesid 17768
disablesid 17769
disablesid 17771
disablesid 17773
disablesid 17774
disablesid 17778
disablesid 17781
disablesid 17806
disablesid 17807
disablesid 17808
disablesid 17817
disablesid 18077
disablesid 18078
disablesid 18174
disablesid 18175
disablesid 18186
disablesid 18187
disablesid 18188
disablesid 18229
disablesid 18238
disablesid 18243
disablesid 18245
disablesid 18250
disablesid 18261
disablesid 18262
disablesid 18263
disablesid 18276
disablesid 18286
disablesid 18293
disablesid 18294
disablesid 18295
disablesid 18296
disablesid 18301
disablesid 18302
disablesid 18303
disablesid 18306
disablesid 18313
disablesid 18402
disablesid 18406
disablesid 18407
disablesid 18408
disablesid 18413
disablesid 18418
disablesid 18420
disablesid 18447
disablesid 18463
disablesid 18482
disablesid 18485
disablesid 18486
disablesid 18503
disablesid 18518
disablesid 18519
disablesid 18520
disablesid 18521
disablesid 18522
disablesid 18523
disablesid 18539
disablesid 18540
disablesid 18542
disablesid 18543
disablesid 18544
disablesid 18584
disablesid 18587
disablesid 18599
disablesid 18600
disablesid 18601
disablesid 18615
disablesid 18616
disablesid 18624
disablesid 18644
disablesid 18679
disablesid 18691
disablesid 18753
disablesid 18765
disablesid 18805
disablesid 18951
disablesid 18952
disablesid 18953
disablesid 18954
disablesid 18992
disablesid 18995
disablesid 19004
disablesid 19009
disablesid 19063
disablesid 19071
disablesid 19080
disablesid 19083
disablesid 19101
disablesid 19136
disablesid 19146
disablesid 19170
disablesid 19183
disablesid 19185
disablesid 19192
disablesid 19196
disablesid 19292
disablesid 19308
disablesid 19403
disablesid 19408
disablesid 19411
disablesid 19661
disablesid 19713
disablesid 19892
disablesid 19938
disablesid 20058
disablesid 20060
disablesid 20131
disablesid 20249
disablesid 20671
disablesid 20735
disablesid 20776
disablesid 20778
disablesid 20779
disablesid 20780
disablesid 20781
disablesid 20782
disablesid 20783
disablesid 20784
disablesid 20785
disablesid 20889
disablesid 20901
disablesid 21044
disablesid 21057
disablesid 21068
disablesid 21072
disablesid 21073
disablesid 21074
disablesid 21075
disablesid 21078
disablesid 21098
disablesid 21099
disablesid 21108
disablesid 21160
disablesid 21259
disablesid 21299
disablesid 21338
disablesid 21339
disablesid 21342
disablesid 21438
disablesid 21489
disablesid 21492
disablesid 21509
disablesid 21510
disablesid 21533
disablesid 21534
disablesid 21535
disablesid 21539
disablesid 21549
disablesid 21581
disablesid 21646
disablesid 21654
disablesid 21655
disablesid 21656
disablesid 21657
disablesid 21658
disablesid 21659
disablesid 21660
disablesid 21661
disablesid 21666
disablesid 21678
disablesid 21679
disablesid 21680
disablesid 21681
disablesid 21682
disablesid 21683
disablesid 21684
disablesid 21685
disablesid 21686
disablesid 21766
disablesid 21860
disablesid 21869
disablesid 21874
disablesid 21875
disablesid 21876
disablesid 21941
disablesid 21991
disablesid 21992
disablesid 21993
disablesid 21994
disablesid 22039
disablesid 22040
disablesid 22068
disablesid 22069
disablesid 22070
disablesid 22088
disablesid 22090
disablesid 22098
disablesid 22915
disablesid 22916
disablesid 22940
disablesid 22949
disablesid 22952
disablesid 23058
disablesid 23096
disablesid 23097
disablesid 23139
disablesid 23141
disablesid 23147
disablesid 23158
disablesid 23159
disablesid 23171
disablesid 23218
disablesid 23219
disablesid 23220
disablesid 23221
disablesid 23222
disablesid 23223
disablesid 23224
disablesid 23225
disablesid 23248
disablesid 23260
disablesid 23393
disablesid 23618
disablesid 23619
disablesid 23622
disablesid 23631
disablesid 23632
disablesid 23781
disablesid 23785
disablesid 23786
disablesid 23795
disablesid 23797
disablesid 23798
disablesid 23833
disablesid 23848
disablesid 23849
disablesid 23850
disablesid 688
disablesid 9326
disablesid 9327
disablesid 9328
disablesid 9330
disablesid 9331
disablesid 9332
disablesid 9333
disablesid 9334
disablesid 9335
disablesid 9336
disablesid 9337
disablesid 9338
disablesid 9339
disablesid 9340
disablesid 9342
disablesid 9343
disablesid 9344
disablesid 9345
disablesid 9346
disablesid 9347
disablesid 9348
disablesid 9349
disablesid 9350
disablesid 9351
disablesid 9352
disablesid 9353
disablesid 9354
disablesid 9355
disablesid 9356
disablesid 9357
disablesid 9358
disablesid 9359
disablesid 9360
disablesid 9361
disablesid 9362
disablesid 9363
disablesid 9364
disablesid 9365
disablesid 9366
disablesid 9367
disablesid 9368
disablesid 9369
disablesid 9370
disablesid 9371
disablesid 9372
disablesid 9373
disablesid 9374
disablesid 9375
disablesid 9376
disablesid 9377
disablesid 9378
disablesid 9379
disablesid 9380
disablesid 9381
disablesid 9382
disablesid 9383
disablesid 9384
disablesid 9385
disablesid 9386
disablesid 9387
disablesid 9388
disablesid 9389
disablesid 9390
disablesid 9391
disablesid 9392
disablesid 9393
disablesid 9394
disablesid 9395
disablesid 9396
disablesid 9397
disablesid 9398
disablesid 9399
disablesid 9400
disablesid 9401
disablesid 9402
disablesid 9403
disablesid 9404
disablesid 9406
disablesid 9407
disablesid 9408
disablesid 9409
disablesid 9410
disablesid 9411
disablesid 9412
disablesid 9413
disablesid 9414
disablesid 9415
disablesid 9416
disablesid 9417
disablesid 9419
disablesid 9420
disablesid 9421
disablesid 9422
disablesid 9423
disablesid 9424
disablesid 9425
disablesid 9426
